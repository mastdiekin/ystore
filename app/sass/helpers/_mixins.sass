//********************************************************************//
//																	  //
//							Градиент								  //
//																	  //
//********************************************************************//

=gdef($dir, $colorone, $colortwo)
	background: $colorone
	background: linear-gradient($dir, $colorone 0%, $colortwo 100%)

=g($dir, $colorone, $percentone, $colortwo, $percenttwo)
	background: $colorone
	background: linear-gradient($dir, $colorone percentage($percentone/100), $colortwo percentage($percenttwo/100))
//Пример
//+g(right, #000, 0, #ff0000, 100)
//+gdef(left, #fff, #000)

//********************************************************************//
//																	  //
//							Работа с блоками						  //
//																	  //
//********************************************************************//


=gray
	filter: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg'><filter id='grayscale'><feColorMatrix type='matrix' values='0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0'/></filter></svg>#grayscale")
	// Firefox 10+
	filter: gray
	// IE6-9
	-webkit-filter: grayscale(100%)
	// Chrome 19+ & Safari 6+
	filter: progid:DXImageTransform.Microsoft.BasicImage(grayScale=1)
	-ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(grayScale=1)"

=gray-half
	filter: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg'><filter id='grayscale'><feColorMatrix type='saturate' values='0.5'/></filter></svg>#grayscale")
	// Firefox 10+
	filter: gray alpha(opacity = 50)
	// IE6-9
	-webkit-filter: grayscale(50%)
	// Chrome 19+ & Safari 6+

=gray-zero
	filter: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg'><filter id='grayscale'><feColorMatrix type='matrix' values='1 0 0 0 0, 0 1 0 0 0, 0 0 1 0 0, 0 0 0 1 0'/></filter></svg>#grayscale")
	-webkit-filter: grayscale(0%)

=ab
	top: 0
	bottom: 0
	left: 0
	right: 0

=c
	content: ''
	

//margin 0 auto
=m0
	margin: 0 auto

=opacity($trans)
	-moz-opacity: $trans
	-khtml-opacity: $trans
	opacity: $trans
	filter: alpha(opactiy=($trans * 100))
	-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=#{$trans * 100})"

=o($trans)
	+opacity($trans)

=coverdiv
	position: absolute
	top: 0
	left: 0
	width: 100%
	height: 100%

=box
	+box-sizing(border-box)

=clr
	&:after
		content: " "
		display: table
		clear: both
	*zoom: 1

=placeholder-color($color)
	&:-moz-placeholder,
	&::-moz-placeholder
		color: $color
		opacity: 1
	&::-webkit-input-placeholder
		color: $color

=placeholder
	&:-ms-input-placeholder
		@content
	&:-moz-placeholder
		@content
	&::-moz-placeholder
		@content
	&::-webkit-input-placeholder
		@content
	&::placeholder
		@content

=scrollbar
	&::-webkit-scrollbar
		@content

=scrollbar-track
	&::-webkit-scrollbar-track
		@content

=scrollbar-thumb
	&::-webkit-scrollbar-thumb
		@content

=scrollbar-track-piece
	&::-webkit-scrollbar-track-piece
		@content

=counter($var)
	counter-reset: $var
	> li, > dt
		&:before
			content: counter($var)
			counter-increment: $var

=br($radius) 
	-webkit-border-radius: $radius
	-moz-border-radius: $radius 
	-ms-border-radius: $radius
	border-radius: $radius
	
=bs($bshadow)
	-webkit-box-shadow: $bshadow
	-moz-box-shadow: $bshadow
	-ms-box-shadow: $bshadow
	-o-box-shadow: $bshadow
	box-shadow: $bshadow

=ie
	*display: inline
	*zoom: 1

%pseudo
	position: relative
	&:before,&:after
		content: ' '
		position: absolute
		top: 0
		left: 0
		
=pseudo
	@extend %pseudo

//********************************************************************//
//																	  //
//						Геометрические фигуры						  //
//																	  //
//********************************************************************//

//быстрый круг
=sq($size)
	width: ($size+px)
	height: ($size+px)
	border-radius: 50%

//быстрый прямоугольник
=rect($width, $height)
	width: ($width+px)
	height: ($height+px)

//быстрый квадрат
=qd($size)
	width: ($size+px)
	height: ($size+px)

//Треугольник
=arr($width, $height, $bg, $direction)
	width: 0px
	height: 0px
	border-style: solid
	@if $direction == t
		border-width: 0 $width / 2 + px $height + px $width / 2 + px
		border-color: transparent transparent $bg transparent
	@if $direction == r
		border-width: $height / 2 + px 0 $height / 2 + px $width + px
		border-color: transparent transparent transparent $bg
	@if $direction == b
		border-width: $height + px $width / 2 + px 0 $width / 2 + px
		border-color: $bg transparent transparent transparent
	@if $direction == l
		border-width: $height / 2 + px $width + px $height / 2 + px 0
		border-color: transparent $bg transparent transparent
	@if $direction == tl
		border-width: $height + px $width + px 0 0
		border-color: $bg transparent transparent transparent
	@if $direction == tr
		border-width: 0 $width + px $height + px 0
		border-color: transparent $bg transparent transparent
	@if $direction == br
		border-width: 0 0 $height + px $width + px
		border-color: transparent transparent $bg transparent
	@if $direction == bl
		border-width: $height + px 0 0 $width + px
		border-color: transparent transparent transparent $bg
// Пример
// +arr(500,50, #000, l)
// +arr(500,50, #000, bl)


//********************************************************************//
//																	  //
//								Flexbox: 							  //
//																	  //
//********************************************************************//

//flex
=df
	display: -webkit-flex
	display: -moz-flex
	display: -ms-flex
	display: -o-flex
	display: flex
=fw
	-webkit-flex-wrap: wrap
	-ms-flex-wrap: wrap
	flex-wrap: wrap
=fnw
	-webkit-flex-wrap: nowrap
	-ms-flex-wrap: nowrap
	flex-wrap: nowrap

//flex растянуть по высоте блока
=stretch
	-webkit-box-align: stretch
	-webkit-align-items: stretch
	-ms-flex-align: stretch
	align-items: stretch

//распределение по краям
=sb
	-webkit-justify-content: space-between
	-moz-justify-content: space-between
	-ms-justify-content: space-between
	-o-justify-content: space-between
	justify-content: space-between

//центр по горизонтали
=cg
	-webkit-justify-content: center
	justify-content: center

//центр по вертикали
=cv
	-webkit-box-align: center
	-webkit-align-items: center
	-ms-flex-align: center
	align-items: center

//центр по горизонтали и вертикали
=cc
	-webkit-justify-content: center
	justify-content: center
	-webkit-box-align: center
	-webkit-align-items: center
	-ms-flex-align: center
	align-items: center

=ccs
	-webkit-justify-content: space-between
	justify-content: space-between
	-webkit-box-align: center
	-webkit-align-items: center
	-ms-flex-align: center
	align-items: center

//********************************************************************//
//																	  //
//							Позиционирование 						  //
//																	  //
//********************************************************************//

=pr
	position: relative

=pa
	position: absolute

=pf
	position: fixed

//********************************************************************//
//																	  //
//								Bootstrap: 							  //
//																	  //
//********************************************************************//

=md
	margin-left: 0 !important
	margin-right: 0 !important
=pdb
	padding-left: 0 !important
	padding-right: 0 !important
=pd
	padding: 0 !important

//********************************************************************//
//																	  //
//							Работа с текстом: 						  //
//																	  //
//********************************************************************//


//для иконочных шрифтов
=icon($fontfamily)
	font-family: quote($fontfamily)
	-webkit-font-smoothing: antialiased
	-moz-osx-font-smoothing: grayscale
	font-style: normal
	font-variant: normal
	font-weight: normal
	text-decoration: none
	text-transform: none

//Высчитать em из пикселей
$browser-context: 16 // Default
@function em($pixels, $context: $browser-context)
	@return #{$pixels/$context}em
//font-size: em(32) //сниппет - Е(англ.) + таб

//Высчитать em из пикселей
@function calculateRem($size)
	$remSize: $size / 16px
	@return $remSize * 1rem

//Высчитать em из пикселей - короткая запись
=fz($size)
	font-size: $size
	font-size: calculateRem($size)

=rem($size)
	font-size: $size
	font-size: calculateRem($size)

@function vw($pixel, $defaultWidth: 1920px)
	@return $pixel * (100 / $defaultWidth) * 1vw

@function calcVw($minPixel, $pixel)
	$addPixel: vw($pixel - $minPixel);
	@return #{"calc(#{$minPixel} + #{$addPixel})"}

=fzA($minPixel, $pixel)
	font-size: $minPixel
	font-size: calcVw($minPixel, $pixel)

// example usage
//
// .selector {
//      @include fzA(12px, 20px);
// }
//
// compiled to
//
// .selector {
//      font-size: 12px;
//      font-size: calc(12px + 0.42vw);
// }

=lh($value, $context)
	line-height: $value / $context

=lsEM($value)
	letter-spacing: $value / 1000 * 1em
// .asd
// 	+lsEM(460)  //photoshop letter spacing size

=lsPX($value, $fontsize)
	letter-spacing: $value * $fontsize / 1000+ px
// .asdasd
// 	+lsPX(460, 16) //photoshop letter spacing size + font size

//fontawesome
=fa
	font-family: FontAwesome
	font-style: normal
	font-weight: normal
	text-decoration: inherit

// Обрезание текста с 3 точиями
=text-overflow
	overflow: hidden
	-ms-text-overflow: ellipsis
	text-overflow: ellipsis
	white-space: nowrap

//bold text
=b
	font-weight: bold

=sans
	font-family: 'Open Sans', sans-serif

// font-family без формата woff2
=font($alias, $name)
	@font-face
		font-family: $alias
		src: url("../fonts/" + $name + "/" + $name + ".eot")
		src: url("../fonts/" + $name + "/" + $name + ".eot?#iefix") format("embedded-opentype"), url("../fonts/" + $name + "/" + $name + ".woff") format("woff"), url("../fonts/" + $name + "/" + $name + ".ttf") format("truetype")
		font-weight: normal
		font-style: normal


// font-family с форматом woff2
=fontWoff2($alias, $name)
	@font-face
		font-family: $alias
		src: url("../fonts/" + $name + "/" + $name + ".eot")
		src: url("../fonts/" + $name + "/" + $name + ".eot?#iefix") format("embedded-opentype"), url("../fonts/" + $name + "/" + $name + ".woff2") format("woff2"), url("../fonts/" + $name + "/" + $name + ".woff") format("woff"), url("../fonts/" + $name + "/" + $name + ".ttf") format("truetype")
		font-weight: normal
		font-style: normal


=hide-text
	font: 0/0 a
	text-shadow: none
	color: transparent

=hidetext
	+hide-text

=justify
	text-align: justify
	line-height: 0
	font-size: 0
	text-justify: newspaper
	zoom: 1
	text-align-last: justify
	&:after
		content: ""
		display: inline-block
		width: 100%
		height: 0px
		visibility: hidden
		overflow: hidden

=prevent-text
	-ms-word-break: break-all
	word-break: break-all
	word-break: break-word
	-webkit-hyphens: auto
	-moz-hyphens: auto
	hyphens: auto

=font-smoothing($val: antialiased)
	-webkit-font-smoothing: $val
	-moz-font-smoothing: $val
	-ms-font-smoothing: $val
	-o-font-smoothing: $val


//Управляет поведением выделения текста и других элементов на странице.
=unselectable
	-webkit-touch-callout: none
	-webkit-user-select: none
	-khtml-user-select: none
	-moz-user-select: none
	-ms-user-select: none
	user-select: none

=nosel
	+unselectable

//применяет стиль к выделенному пользователем тексту.
=selection
	& ::selection
		@content
	& ::-moz-selection
		@content

=sel
	+selection

@function makelongshadow($color)
	$val: 0px 0px $color
	@for $i from 1 through 200
		$val: #{$val}, #{$i}px #{$i}px #{$color}
	@return $val

=longshadow($color)
	text-shadow: makelongshadow($color)

=ts($string) 
	-webkit-text-shadow: $string
	-moz-text-shadow: $string
	-ms-text-shadow: $string
	-o-text-shadow: $string
	text-shadow: $string

=links($link, $visit, $hover, $active)
	a
		color: $link
		&:visited
			color: $visit
		&:hover
			color: $hover
		&:active
			color: $active

//********************************************************************//
//																	  //
//							Медиа запросы							  //
//																	  //
//********************************************************************//

=rmm($width, $width2)
	@media (min-width: $width+ "px") and (max-width: $width2+ "px")
		@content

// width
=r($width)
	@media only screen and (max-width: $width+ "px")
		@content

=ios($width)
	@media screen and (max-device-width: $width+ "px")
		@content

//минимальная ширина
=rmin($width)
	@media only screen and (min-width: $width+ "px")
		@content

// height
=rh($height)
	@media only screen and (max-height: $height + "px")
		@content

=rhmin($height)
	@media only screen and (min-height: $height + "px")
		@content

// retina
=retina
	@media only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min-device-pixel-ratio: 2)
		@content

=retina13
	@media (min--moz-device-pixel-ratio: 1.3), (-o-min-device-pixel-ratio: 2.6/2), (-webkit-min-device-pixel-ratio: 1.3), (min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx)
		@content

// retina, also available as +hdpi
=retina($image, $width, $height)
	@media (min--moz-device-pixel-ratio: 1.3), (-o-min-device-pixel-ratio: 2.6/2), (-webkit-min-device-pixel-ratio: 1.3), (min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx)
		background-image: url($image)
		background-size: $width + px $height + px
		background-size: $width / 10 + rem $height / 10 + rem

//********************************************************************//
//																	  //
//							Background: 							  //
//																	  //
//********************************************************************//

=cover
	background-repeat: no-repeat
	-webkit-background-size: cover
	-moz-background-size: cover
	-o-background-size: cover
	background-size: cover
	background-position: 50% 50%

=size($width: 100%, $height: 100%)
	-moz-background-size: $width $height
	-webkit-background-size: $width $height
	background-size: $width $height

//********************************************************************//
//																	  //
//			Transform Transition / Анимации, трансформации: 		  //
//																	  //
//********************************************************************//

// ROTATE
=rotate($deg: 0, $m11: 0, $m12: 0, $m21: 0, $m22: 0)
	-moz-transform: rotate($deg + deg)
	-o-transform: rotate($deg + deg)
	-webkit-transform: rotate($deg + deg)
	-ms-transform: rotate($deg + deg)
	transform: rotate($deg + deg)
	filter: progid:DXImageTransform.Microsoft.Matrix(M11=$m11, M12=$m12,M21=$m21, M22=$m22, sizingMethod='auto expand')
	zoom: 1

// TRANSITION
=transition($what)
	-moz-transition: $what
	-o-transition: $what
	-webkit-transition: $what
	-ms-transition: $what
	transition: $what

=tr($what)
	+transition($what)

=trall($sec, $use)
	-moz-transition: all $sec $use
	-o-transition: all $sec $use
	-webkit-transition: all $sec $use
	-ms-transition: all $sec $use
	transition: all $sec $use
//Пример
//+trall(.4s, ease)

=rotate($var)
	-ms-transform: rotate($var+deg)
	-webkit-transform: rotate($var+deg)
	transform: rotate($var+deg)

=blur($var)
	-webkit-filter: blur($var)
	filter: blur($var)
	
=scale($var)
	-ms-transform: scale($var)
	-webkit-transform: scale($var)
	transform: scale($var)

//********************************************************************//
//																	  //
//							Центрирование:							  //
//																	  //
//********************************************************************//

// Центрирование блока по горизонтали и по вертикали
=vcenter
	position: absolute
	top: 50%
	left: 50%
	+translate(-50%,-50%)

//Центровка по горизонтали и вертикали (в дочернему элменту надо добавить display: inline-block , vertical-align: middle и font-size)
=vertical
	text-align: center
	font-size: 0
	&:before
		content: ""
		display: inline-block
		vertical-align: middle
		width: 0
		height: 100%